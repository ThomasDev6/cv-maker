name: Intro to GitHub Actions

 # When does this workflow run?
on:
    push:

jobs:
  build-test-pnpm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Run server
        run: | # Pipe pour faire un multi-line
          pnpm run preview &
          sleep 5

      - name: Curl the server
        run: curl -I http://localhost:4173

  deploy:
    runs-on: ubuntu-latest
    needs: build-test-pnpm
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Get Vercel env
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Buld Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

#  build-test-bun:
#    runs-on: ubuntu-latest # The type of machine to run on
#    steps: # Etape de notre job
#      - uses: actions/checkout@v4 # Checkout our repository
#
#      - uses: oven-sh/setup-bun@v1 # Setup bun
#        with:
#          bun-version: latest
#
#      - name: Install depdenencies
#        run: bun install
#
#      - name: Build
#        run: bun run build
#
#      - name: Run server
#        run: | # Pipe pour faire un multi-line
#          bun run preview &
#          sleep 5
#
#      - name: Curl the server
#        run: curl -I http://localhost:4173

